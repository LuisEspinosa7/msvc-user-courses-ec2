
DOCKER

> Docker hacia la maquina local
host.docker.internal

> Usuarios
docker build -t usuarios . -f .\msvc-usuarios\Dockerfile
docker build -t usuarios . -f .\msvc-usuarios\Dockerfile --build-arg PORT_APP=8080    (TEST)
docker run -p 8001:8001 usuarios


> Cursos
docker build -t cursos . -f .\msvc-cursos\Dockerfile
docker run -p 8001:8001 cursos

> Network
docker network create spring

> Container Usuarios
docker run -p 8001:8001 --env-file .\msvc-usuarios\.env -d --rm --name msvc-usuarios --network spring usuarios

docker run -p 8001:8001 -d --rm --name msvc-usuarios --network spring usuarios
docker run -p 8001:8000 -d --rm --name msvc-usuarios --network spring usuarios TEST
docker run -p 8001:8090 --env PORT=8090 -d --rm --name msvc-usuarios --network spring usuarios
docker run -p 8001:8090 --env-file .\msvc_usuarios\.env -d --rm --name msvc-usuarios --network spring usuarios
docker run -p 8001:8080 -d --rm --name msvc-usuarios --network spring usuarios

> Container Cursos
docker run -p 8002:8002 --env-file .\msvc-cursos\.env -d --rm --name msvc-cursos --network spring cursos

docker run -p 8002:8002 -d --rm --name msvc-cursos --network spring cursos


> MySQL
docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=msvc_usuarios -v data-mysql:/var/lib/mysql --restart=always mysql:8

docker logs -f mysql8

> POSTGRESQL
docker run -d -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=123456 -e POSTGRES_DB=msvc_cursos -v data-postgres:/var/lib/postgresql/data --restart=always postgres:14-alpine

docker logs -f postgres14

> Utilitario conexion MySQL
docker run -it --rm --network spring mysql:8 bash
mysql -h mysql8 -u root -p

> Utilitario conexion PostgreSQL
docker run -it --rm --network spring postgres:14-alpine bash
psql -h postgres14 -U postgres


FROM openjdk:11.0.16


> Force to build through docker compose

docker-compose up --build -d


> Creacion de imagenes a docker hub

docker tag curso-kubernetes_msvc-usuarios luisllanos8/usuarios

docker push luisllanos8/usuarios

docker tag curso-kubernetes_msvc-cursos luisllanos8/cursos

docker push luisllanos8/cursos


> CONECTARSE AL EC2
ssh -i "spring-cloud.pem" ec2-user@ec2-3-84-221-62.compute-1.amazonaws.com
ssh -i "spring-cloud.pem" ec2-user@ec2-54-208-57-131.compute-1.amazonaws.com


> EC2 DOCKER

sudo amazon-linux-extras install docker

sudo service docker start

https://docs.docker.com/compose/install/

sudo curl -SL https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

> COPIAR DOCKER-COMPOSE FILE TO EC2
sudo cp /mnt/d/Development/Intellij-Workspace/Curso-Kubernetes/curso-kubernetes/docker-compose.yml /home/luis

scp -i "spring-cloud.pem" docker-compose.yml ec2-user@ec2-3-84-221-62.compute-1.amazonaws.com:/home/ec2-user


> INICIAR SERVICIO DOCKER
sudo service docker start


> INICIAR APLICACIONES
sudo docker-compose up -d

> ESCALAMIENTO HORIZONTAL

- Usuarios
ssh -i "spring-cloud.pem" ec2-user@ec2-54-152-50-9.compute-1.amazonaws.com
scp -i "spring-cloud.pem" docker-compose-usuarios.yml ec2-user@ec2-54-152-50-9.compute-1.amazonaws.com:/home/ec2-user

-Cursos
ssh -i "spring-cloud.pem" ec2-user@ec2-54-91-101-223.compute-1.amazonaws.com
scp -i "spring-cloud.pem" docker-compose-cursos.yml ec2-user@ec2-54-91-101-223.compute-1.amazonaws.com:/home/ec2-user

